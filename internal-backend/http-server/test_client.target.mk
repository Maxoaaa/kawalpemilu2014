# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := test_client
DEFS_Debug := \
	'-D_LARGEFILE_SOURCE' \
	'-D_FILE_OFFSET_BITS=64' \
	'-D_POSIX_C_SOURCE=200112' \
	'-DDEBUG' \
	'-D_DEBUG' \
	'-DEV_VERIFY=2'

# Flags passed to all source files.
CFLAGS_Debug := \
	-Wall \
	-ansi \
	-pthread \
	-fvisibility=hidden \
	-g \
	-O0 \
	-fwrapv

# Flags passed to only C files.
CFLAGS_C_Debug :=

# Flags passed to only C++ files.
CFLAGS_CC_Debug := \
	-fno-rtti \
	-fno-exceptions \
	-std=c++11

INCS_Debug := \
	-Ihttp-server/libuv/include

DEFS_Release := \
	'-D_LARGEFILE_SOURCE' \
	'-D_FILE_OFFSET_BITS=64' \
	'-D_POSIX_C_SOURCE=200112' \
	'-DNDEBUG'

# Flags passed to all source files.
CFLAGS_Release := \
	-Wall \
	-ansi \
	-pthread \
	-fvisibility=hidden \
	-O3 \
	-fstrict-aliasing \
	-fomit-frame-pointer \
	-fdata-sections \
	-ffunction-sections

# Flags passed to only C files.
CFLAGS_C_Release :=

# Flags passed to only C++ files.
CFLAGS_CC_Release := \
	-fno-rtti \
	-fno-exceptions \
	-std=c++11

INCS_Release := \
	-Ihttp-server/libuv/include

OBJS := \
	$(obj).target/$(TARGET)/http-server/test_client.o

# Add to the list of files we specially track dependencies for.
all_deps += $(OBJS)

# Make sure our dependencies are built before any of us.
$(OBJS): | $(builddir)/libuv.a $(builddir)/libhttp_server.a $(builddir)/libhttp_parser.a $(obj).target/http-server/libuv/libuv.a $(obj).target/http-server/libhttp_server.a $(obj).target/http-server/http-parser/libhttp_parser.a

# CFLAGS et al overrides must be target-local.
# See "Target-specific Variable Values" in the GNU Make manual.
$(OBJS): TOOLSET := $(TOOLSET)
$(OBJS): GYP_CFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE))
$(OBJS): GYP_CXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE))

# Suffix rules, putting all outputs into $(obj).

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.cc FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

# Try building from generated source, too.

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.cc FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.cc FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

# End of this set of suffix rules
### Rules for final target.
LDFLAGS_Debug := \
	-pthread \
	-pthread

LDFLAGS_Release := \
	-pthread \
	-pthread

LIBS := \
	-lm \
	-ldl \
	-lrt

$(builddir)/test_client: GYP_LDFLAGS := $(LDFLAGS_$(BUILDTYPE))
$(builddir)/test_client: LIBS := $(LIBS)
$(builddir)/test_client: LD_INPUTS := $(OBJS) $(obj).target/http-server/libuv/libuv.a $(obj).target/http-server/libhttp_server.a $(obj).target/http-server/http-parser/libhttp_parser.a
$(builddir)/test_client: TOOLSET := $(TOOLSET)
$(builddir)/test_client: $(OBJS) $(obj).target/http-server/libuv/libuv.a $(obj).target/http-server/libhttp_server.a $(obj).target/http-server/http-parser/libhttp_parser.a FORCE_DO_CMD
	$(call do_cmd,link)

all_deps += $(builddir)/test_client
# Add target alias
.PHONY: test_client
test_client: $(builddir)/test_client

